{"ast":null,"code":"import { useStore } from \"vuex\";\nimport { computed } from \"vue\";\nvar counter = function counter() {\n  var store = useStore();\n  return {\n    //data for manual count component\n    count: computed(function () {\n      return store.state.counter;\n    }),\n    //data for range count component\n    rangeStart: computed(function () {\n      return store.state.range[0];\n    }),\n    interval: computed(function () {\n      return store.state.interval;\n    }),\n    //methods for manual count component\n    increment: function increment() {\n      store.commit(\"increment\");\n    },\n    decrement: function decrement() {\n      store.commit(\"decrement\");\n    },\n    setValue: function setValue(newValue) {\n      store.commit(\"setValue\", newValue);\n    },\n    reset: function reset() {\n      store.commit(\"reset\");\n    },\n    //methods for range count component\n    play: function play(rangeEnd) {\n      store.commit(\"play\", rangeEnd);\n    },\n    stop: function stop() {\n      store.commit(\"stop\");\n    },\n    rangeReset: function rangeReset() {\n      store.commit(\"rangeReset\");\n    }\n  };\n};\nexport default counter;","map":{"version":3,"names":["useStore","computed","counter","store","count","state","rangeStart","range","interval","increment","commit","decrement","setValue","newValue","reset","play","rangeEnd","stop","rangeReset"],"sources":["C:/Users/USER/Desktop/exam/my-app/src/composables/counter.js"],"sourcesContent":["import { useStore } from \"vuex\";\r\nimport { computed } from \"vue\";\r\n\r\nconst counter = () => {\r\n  const store = useStore();\r\n  \r\n  return {\r\n    //data for manual count component\r\n    count: computed(() => store.state.counter),\r\n\r\n    //data for range count component\r\n    rangeStart: computed(() => store.state.range[0]),\r\n    interval: computed(() => store.state.interval),\r\n\r\n    //methods for manual count component\r\n    increment() {\r\n      store.commit(\"increment\")\r\n    },\r\n    decrement() {\r\n      store.commit(\"decrement\")\r\n    },\r\n    setValue(newValue) {\r\n      store.commit(\"setValue\", newValue);\r\n    },\r\n    reset() {\r\n      store.commit(\"reset\");\r\n    },\r\n\r\n    //methods for range count component\r\n    play(rangeEnd) {\r\n      store.commit(\"play\", rangeEnd);\r\n    },\r\n    stop() {\r\n      store.commit(\"stop\");\r\n    },\r\n    rangeReset() {\r\n      store.commit(\"rangeReset\");\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default counter;"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,MAAM;AAC/B,SAASC,QAAQ,QAAQ,KAAK;AAE9B,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EACpB,IAAMC,KAAK,GAAGH,QAAQ,EAAE;EAExB,OAAO;IACL;IACAI,KAAK,EAAEH,QAAQ,CAAC;MAAA,OAAME,KAAK,CAACE,KAAK,CAACH,OAAO;IAAA,EAAC;IAE1C;IACAI,UAAU,EAAEL,QAAQ,CAAC;MAAA,OAAME,KAAK,CAACE,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC;IAAA,EAAC;IAChDC,QAAQ,EAAEP,QAAQ,CAAC;MAAA,OAAME,KAAK,CAACE,KAAK,CAACG,QAAQ;IAAA,EAAC;IAE9C;IACAC,SAAS,WAAAA,UAAA,EAAG;MACVN,KAAK,CAACO,MAAM,CAAC,WAAW,CAAC;IAC3B,CAAC;IACDC,SAAS,WAAAA,UAAA,EAAG;MACVR,KAAK,CAACO,MAAM,CAAC,WAAW,CAAC;IAC3B,CAAC;IACDE,QAAQ,WAAAA,SAACC,QAAQ,EAAE;MACjBV,KAAK,CAACO,MAAM,CAAC,UAAU,EAAEG,QAAQ,CAAC;IACpC,CAAC;IACDC,KAAK,WAAAA,MAAA,EAAG;MACNX,KAAK,CAACO,MAAM,CAAC,OAAO,CAAC;IACvB,CAAC;IAED;IACAK,IAAI,WAAAA,KAACC,QAAQ,EAAE;MACbb,KAAK,CAACO,MAAM,CAAC,MAAM,EAAEM,QAAQ,CAAC;IAChC,CAAC;IACDC,IAAI,WAAAA,KAAA,EAAG;MACLd,KAAK,CAACO,MAAM,CAAC,MAAM,CAAC;IACtB,CAAC;IACDQ,UAAU,WAAAA,WAAA,EAAG;MACXf,KAAK,CAACO,MAAM,CAAC,YAAY,CAAC;IAC5B;EACF,CAAC;AACH,CAAC;AAGD,eAAeR,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}