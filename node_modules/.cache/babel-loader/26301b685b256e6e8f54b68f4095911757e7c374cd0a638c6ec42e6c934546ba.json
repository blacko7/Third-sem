{"ast":null,"code":"import { createElementVNode as _createElementVNode, withModifiers as _withModifiers, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"header\", {\n  class: \"header\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", null, [/*#__PURE__*/_createElementVNode(\"p\", null, \"THE\"), /*#__PURE__*/_createElementVNode(\"p\", null, \"COUNTER APP\")]), /*#__PURE__*/_createElementVNode(\"p\", {\n  class: \"email\"\n}, \"❤mmejuenoch@gmail.com❤\")], -1 /* HOISTED */);\nconst _hoisted_2 = {\n  class: \"main\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"manual\"\n}, \"Manual Count\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"range\"\n}, \"Range Count\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"word\"\n}, \"Word Count\", -1 /* HOISTED */);\nconst _hoisted_6 = [_hoisted_3, _hoisted_4, _hoisted_5];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Manual = _resolveComponent(\"Manual\");\n  const _component_Range = _resolveComponent(\"Range\");\n  const _component_Word = _resolveComponent(\"Word\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _createElementVNode(\"main\", _hoisted_2, [_createElementVNode(\"form\", {\n    class: \"form-options\",\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.handleSelect && $options.handleSelect(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"select\", {\n    class: \"select\",\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.handleSelect && $options.handleSelect(...args))\n  }, _hoisted_6, 32 /* HYDRATE_EVENTS */)], 32 /* HYDRATE_EVENTS */), _createCommentVNode(\" So there are basically 3 kind of counter in this app.\\r\\n        (1) Is called 'manual' and that means, you count by yourself with\\r\\n            the plus and minus buttons. [[This is basically the Altschool counter project]]\\r\\n        (2) This is according to a range, you start counting and it counts up to\\r\\n            the range you specified, it either counts up to a positive number\\r\\n            or counts down to a negative number\\r\\n        (3) This just counts the number of words in the text it got\\r\\n            from the textarea  \"), $data.selected == 'manual' ? (_openBlock(), _createBlock(_component_Manual, {\n    key: 0\n  })) : $data.selected == 'range' ? (_openBlock(), _createBlock(_component_Range, {\n    key: 1\n  })) : (_openBlock(), _createBlock(_component_Word, {\n    key: 2\n  }))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","class","value","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","handleSelect","onChange","_createCommentVNode","$data","selected","_createBlock","_component_Manual","key","_component_Range","_component_Word"],"sources":["C:\\Users\\USER\\Desktop\\exam\\my-app\\src\\views\\CounterView.vue"],"sourcesContent":["<template>\r\n    <header class=\"header\">\r\n      <h1>\r\n        <p>THE</p>\r\n        <p>COUNTER APP</p>\r\n      </h1>\r\n      <p class=\"email\">❤mmejuenoch@gmail.com❤</p>\r\n    </header>\r\n    <main class=\"main\">\r\n      <form class=\"form-options\" @submit.prevent=\"handleSelect\">\r\n        <select class=\"select\" @change=\"handleSelect\">\r\n          <option value=\"manual\">Manual Count</option>\r\n          <option value=\"range\">Range Count</option>\r\n          <option value=\"word\">Word Count</option>\r\n        </select>\r\n      </form>\r\n      <!-- So there are basically 3 kind of counter in this app.\r\n        (1) Is called 'manual' and that means, you count by yourself with\r\n            the plus and minus buttons. [[This is basically the Altschool counter project]]\r\n        (2) This is according to a range, you start counting and it counts up to\r\n            the range you specified, it either counts up to a positive number\r\n            or counts down to a negative number\r\n        (3) This just counts the number of words in the text it got\r\n            from the textarea  -->\r\n      <Manual v-if=\"selected == 'manual'\"/>\r\n      <Range v-else-if=\"selected == 'range'\"/>\r\n      <Word v-else/>\r\n    </main>\r\n  </template>\r\n  \r\n  <script>\r\n  //components\r\n  import Manual from \"../components/Manual\";\r\n  import Range from \"../components/Range\";\r\n  import Word from \"../components/Word\";\r\n  \r\n  export default {\r\n    name: \"CounterView\",\r\n    components: {Manual, Range, Word},\r\n    data(){\r\n      return {\r\n        selected: \"manual\",\r\n      }\r\n    },\r\n    methods: {\r\n      handleSelect(event) {\r\n        this.selected = event.target.value;\r\n      }\r\n    }\r\n  }\r\n  </script>\r\n"],"mappings":";gCACIA,mBAAA,CAMS;EANDC,KAAK,EAAC;AAAQ,I,aACpBD,mBAAA,CAGK,a,aAFHA,mBAAA,CAAU,WAAP,KAAG,G,aACNA,mBAAA,CAAkB,WAAf,aAAW,E,gBAEhBA,mBAAA,CAA2C;EAAxCC,KAAK,EAAC;AAAO,GAAC,wBAAsB,E;;EAEnCA,KAAK,EAAC;AAAM;gCAGZD,mBAAA,CAA4C;EAApCE,KAAK,EAAC;AAAQ,GAAC,cAAY;gCACnCF,mBAAA,CAA0C;EAAlCE,KAAK,EAAC;AAAO,GAAC,aAAW;gCACjCF,mBAAA,CAAwC;EAAhCE,KAAK,EAAC;AAAM,GAAC,YAAU;oBAF/BC,UAA4C,EAC5CC,UAA0C,EAC1CC,UAAwC,C;;;;;6DAZ9CC,UAMS,EACTN,mBAAA,CAmBO,QAnBPO,UAmBO,GAlBLP,mBAAA,CAMO;IANDC,KAAK,EAAC,cAAc;IAAEO,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;MACtDX,mBAAA,CAIS;IAJDC,KAAK,EAAC,QAAQ;IAAEa,QAAM,EAAAL,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;sEAM9CI,mBAAA,wiBAO4B,EACdC,KAAA,CAAAC,QAAQ,gB,cAAtBC,YAAA,CAAqCC,iBAAA;IAAAC,GAAA;EAAA,MACnBJ,KAAA,CAAAC,QAAQ,e,cAA1BC,YAAA,CAAwCG,gBAAA;IAAAD,GAAA;EAAA,O,cACxCF,YAAA,CAAcI,eAAA;IAAAF,GAAA;EAAA,I"},"metadata":{},"sourceType":"module","externalDependencies":[]}