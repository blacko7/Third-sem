{"ast":null,"code":"//composables\nimport counter from \"../composables/counter\";\nimport { ref, computed } from \"vue\";\nexport default {\n  name: \"ManualCompo\",\n  setup() {\n    const {\n      count,\n      increment,\n      decrement,\n      setValue,\n      reset\n    } = counter();\n    const numberValue = ref(null);\n\n    //this is just to determine the css style rules for\n    //responsiveness to be given to the div.count-number\n    //whenever the count.value number changes \n    const countClass = computed(() => {\n      if (count.value >= 0 && count.value < 100) {\n        return \"count-number\";\n      } else if (count.value >= 100 && count.value < 1000 || count.value < 0 && count.value >= -99) {\n        return \"count-number hundred\";\n      } else if (count.value >= 1000 && count.value < 10000) {\n        return \"count-number thousand\";\n      } else if (count.value >= 10000) {\n        return \"count-number ten-thousand\";\n      } else {\n        return \"count-number ten-thousand\";\n      }\n    });\n    ///////////////\n\n    const handleSetValue = () => {\n      setValue(numberValue.value);\n      numberValue.value = null;\n    };\n    return {\n      handleSetValue,\n      numberValue,\n      count,\n      increment,\n      decrement,\n      reset,\n      countClass\n    };\n  }\n};","map":{"version":3,"names":["counter","ref","computed","name","setup","count","increment","decrement","setValue","reset","numberValue","countClass","value","handleSetValue"],"sources":["C:\\Users\\USER\\Desktop\\exam\\my-app\\src\\components\\Manual.vue"],"sourcesContent":["<template>\r\n    <div class=\"manual\">\r\n      <div :class=\"countClass\">\r\n        <p>{{ count }}</p>\r\n        <button @click=\"reset\">Reset</button>\r\n      </div>\r\n      <div class=\"controls\">\r\n        <form class=\"form-input\" @submit.prevent=\"handleSetValue\">\r\n          <input type=\"number\" placeholder=\"Set counter\" v-model=\"numberValue\">\r\n          <button>Set</button>\r\n        </form>\r\n        <div class=\"the-buttons\">\r\n          <button @click=\"increment\" class=\"increment\">+</button>\r\n          <button @click=\"decrement\" class=\"decrement\">-</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  //composables\r\n  import counter from \"../composables/counter\";\r\n  import { ref, computed,  } from \"vue\";\r\n  \r\n    export default {\r\n      name: \"ManualCompo\",\r\n      setup() {\r\n        const {count, increment, decrement, setValue, reset} = counter();\r\n        const numberValue = ref(null);\r\n        \r\n        //this is just to determine the css style rules for\r\n        //responsiveness to be given to the div.count-number\r\n        //whenever the count.value number changes \r\n        const countClass = computed(() => {\r\n          if(count.value >= 0 && count.value < 100) {\r\n            return \"count-number\";\r\n          }else if((count.value >= 100 && count.value < 1000) || (count.value < 0 && count.value >= -99)) {\r\n            return \"count-number hundred\";\r\n          } else if(count.value >= 1000 && count.value < 10000) {\r\n            return \"count-number thousand\";\r\n          } else if (count.value >= 10000) {\r\n            return \"count-number ten-thousand\";\r\n          } else {\r\n            return \"count-number ten-thousand\";\r\n          }\r\n        });\r\n        ///////////////\r\n  \r\n        const handleSetValue = () => {\r\n          setValue(numberValue.value);\r\n          numberValue.value = null;\r\n        }\r\n  \r\n        return {\r\n          handleSetValue,\r\n          numberValue,\r\n          count,\r\n          increment,\r\n          decrement,\r\n          reset,\r\n          countClass\r\n        }\r\n      }\r\n    }\r\n  </script>"],"mappings":"AAoBE;AACA,OAAOA,OAAM,MAAO,wBAAwB;AAC5C,SAASC,GAAG,EAAEC,QAAQ,QAAU,KAAK;AAEnC,eAAe;EACbC,IAAI,EAAE,aAAa;EACnBC,KAAKA,CAAA,EAAG;IACN,MAAM;MAACC,KAAK;MAAEC,SAAS;MAAEC,SAAS;MAAEC,QAAQ;MAAEC;IAAK,IAAIT,OAAO,EAAE;IAChE,MAAMU,WAAU,GAAIT,GAAG,CAAC,IAAI,CAAC;;IAE7B;IACA;IACA;IACA,MAAMU,UAAS,GAAIT,QAAQ,CAAC,MAAM;MAChC,IAAGG,KAAK,CAACO,KAAI,IAAK,KAAKP,KAAK,CAACO,KAAI,GAAI,GAAG,EAAE;QACxC,OAAO,cAAc;MACvB,CAAC,MAAK,IAAIP,KAAK,CAACO,KAAI,IAAK,GAAE,IAAKP,KAAK,CAACO,KAAI,GAAI,IAAI,IAAMP,KAAK,CAACO,KAAI,GAAI,KAAKP,KAAK,CAACO,KAAI,IAAK,CAAC,EAAG,EAAE;QAC9F,OAAO,sBAAsB;MAC/B,OAAO,IAAGP,KAAK,CAACO,KAAI,IAAK,IAAG,IAAKP,KAAK,CAACO,KAAI,GAAI,KAAK,EAAE;QACpD,OAAO,uBAAuB;MAChC,OAAO,IAAIP,KAAK,CAACO,KAAI,IAAK,KAAK,EAAE;QAC/B,OAAO,2BAA2B;MACpC,OAAO;QACL,OAAO,2BAA2B;MACpC;IACF,CAAC,CAAC;IACF;;IAEA,MAAMC,cAAa,GAAIA,CAAA,KAAM;MAC3BL,QAAQ,CAACE,WAAW,CAACE,KAAK,CAAC;MAC3BF,WAAW,CAACE,KAAI,GAAI,IAAI;IAC1B;IAEA,OAAO;MACLC,cAAc;MACdH,WAAW;MACXL,KAAK;MACLC,SAAS;MACTC,SAAS;MACTE,KAAK;MACLE;IACF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}