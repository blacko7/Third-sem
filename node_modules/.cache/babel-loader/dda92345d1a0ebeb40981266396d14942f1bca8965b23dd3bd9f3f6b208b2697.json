{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"manual\"\n};\nconst _hoisted_2 = {\n  class: \"controls\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", null, \"Set\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"the-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass($setup.countClass)\n  }, [_createElementVNode(\"p\", null, _toDisplayString($setup.count), 1 /* TEXT */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.reset && $setup.reset(...args))\n  }, \"Reset\")], 2 /* CLASS */), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"form\", {\n    class: \"form-input\",\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $setup.handleSetValue && $setup.handleSetValue(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    placeholder: \"Set counter\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.numberValue = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.numberValue]]), _hoisted_3], 32 /* HYDRATE_EVENTS */), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $setup.increment && $setup.increment(...args)),\n    class: \"increment\"\n  }, \"+\"), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $setup.decrement && $setup.decrement(...args)),\n    class: \"decrement\"\n  }, \"-\")])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_normalizeClass","$setup","countClass","_toDisplayString","count","onClick","_cache","args","reset","_hoisted_2","onSubmit","_withModifiers","handleSetValue","type","placeholder","numberValue","$event","_hoisted_3","_hoisted_4","increment","decrement"],"sources":["C:\\Users\\USER\\Desktop\\exam\\my-app\\src\\components\\Manual.vue"],"sourcesContent":["<template>\r\n    <div class=\"manual\">\r\n      <div :class=\"countClass\">\r\n        <p>{{ count }}</p>\r\n        <button @click=\"reset\">Reset</button>\r\n      </div>\r\n      <div class=\"controls\">\r\n        <form class=\"form-input\" @submit.prevent=\"handleSetValue\">\r\n          <input type=\"number\" placeholder=\"Set counter\" v-model=\"numberValue\">\r\n          <button>Set</button>\r\n        </form>\r\n        <div class=\"the-buttons\">\r\n          <button @click=\"increment\" class=\"increment\">+</button>\r\n          <button @click=\"decrement\" class=\"decrement\">-</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  //composables\r\n  import counter from \"../composables/counter\";\r\n  import { ref, computed,  } from \"vue\";\r\n  \r\n    export default {\r\n      name: \"ManualCompo\",\r\n      setup() {\r\n        const {count, increment, decrement, setValue, reset} = counter();\r\n        const numberValue = ref(null);\r\n        \r\n        //this is just to determine the css style rules for\r\n        //responsiveness to be given to the div.count-number\r\n        //whenever the count.value number changes \r\n        const countClass = computed(() => {\r\n          if(count.value >= 0 && count.value < 100) {\r\n            return \"count-number\";\r\n          }else if((count.value >= 100 && count.value < 1000) || (count.value < 0 && count.value >= -99)) {\r\n            return \"count-number hundred\";\r\n          } else if(count.value >= 1000 && count.value < 10000) {\r\n            return \"count-number thousand\";\r\n          } else if (count.value >= 10000) {\r\n            return \"count-number ten-thousand\";\r\n          } else {\r\n            return \"count-number ten-thousand\";\r\n          }\r\n        });\r\n        ///////////////\r\n  \r\n        const handleSetValue = () => {\r\n          setValue(numberValue.value);\r\n          numberValue.value = null;\r\n        }\r\n  \r\n        return {\r\n          handleSetValue,\r\n          numberValue,\r\n          count,\r\n          increment,\r\n          decrement,\r\n          reset,\r\n          countClass\r\n        }\r\n      }\r\n    }\r\n  </script>"],"mappings":";;EACSA,KAAK,EAAC;AAAQ;;EAKZA,KAAK,EAAC;AAAU;gCAGjBC,mBAAA,CAAoB,gBAAZ,KAAG;;EAERD,KAAK,EAAC;AAAa;;uBAV5BE,mBAAA,CAeM,OAfNC,UAeM,GAdJF,mBAAA,CAGM;IAHAD,KAAK,EAAAI,eAAA,CAAEC,MAAA,CAAAC,UAAU;MACrBL,mBAAA,CAAkB,WAAAM,gBAAA,CAAZF,MAAA,CAAAG,KAAK,kBACXP,mBAAA,CAAqC;IAA5BQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,MAAA,CAAAO,KAAA,IAAAP,MAAA,CAAAO,KAAA,IAAAD,IAAA,CAAK;KAAE,OAAK,E,kBAE9BV,mBAAA,CASM,OATNY,UASM,GARJZ,mBAAA,CAGO;IAHDD,KAAK,EAAC,YAAY;IAAEc,QAAM,EAAAJ,MAAA,QAAAA,MAAA,MAAAK,cAAA,KAAAJ,IAAA,KAAUN,MAAA,CAAAW,cAAA,IAAAX,MAAA,CAAAW,cAAA,IAAAL,IAAA,CAAc;sBACtDV,mBAAA,CAAqE;IAA9DgB,IAAI,EAAC,QAAQ;IAACC,WAAW,EAAC,aAAa;+DAAUb,MAAA,CAAAc,WAAW,GAAAC,MAAA;iDAAXf,MAAA,CAAAc,WAAW,E,GACnEE,UAAoB,C,4BAEtBpB,mBAAA,CAGM,OAHNqB,UAGM,GAFJrB,mBAAA,CAAuD;IAA9CQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,MAAA,CAAAkB,SAAA,IAAAlB,MAAA,CAAAkB,SAAA,IAAAZ,IAAA,CAAS;IAAEX,KAAK,EAAC;KAAY,GAAC,GAC9CC,mBAAA,CAAuD;IAA9CQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEN,MAAA,CAAAmB,SAAA,IAAAnB,MAAA,CAAAmB,SAAA,IAAAb,IAAA,CAAS;IAAEX,KAAK,EAAC;KAAY,GAAC,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}