{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"range\"\n};\nconst _hoisted_2 = {\n  class: \"controls\"\n};\nconst _hoisted_3 = {\n  class: \"form-input\"\n};\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = {\n  class: \"the-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", {\n    class: _normalizeClass($setup.countClass)\n  }, [_createElementVNode(\"p\", null, _toDisplayString($setup.rangeStart), 1 /* TEXT */)], 2 /* CLASS */), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"number\",\n    placeholder: \"count up to\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.numberValue = $event),\n    disabled: $setup.disableInput\n  }, null, 8 /* PROPS */, _hoisted_4), [[_vModelText, $setup.numberValue]])]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $setup.handleCountOrReset && $setup.handleCountOrReset(...args)),\n    class: _normalizeClass($setup.countOrReset)\n  }, _toDisplayString($setup.countOrReset), 3 /* TEXT, CLASS */), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $setup.handleStop && $setup.handleStop(...args)),\n    class: _normalizeClass($setup.disabledOrStop)\n  }, \"Stop\", 2 /* CLASS */)])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_normalizeClass","$setup","countClass","_toDisplayString","rangeStart","_hoisted_2","_hoisted_3","type","placeholder","numberValue","$event","disabled","disableInput","_hoisted_5","onClick","_cache","args","handleCountOrReset","countOrReset","handleStop","disabledOrStop"],"sources":["C:\\Users\\USER\\Desktop\\exam\\my-app\\src\\components\\Range.vue"],"sourcesContent":["<template>\n  <div class=\"range\">\n    <div :class=\"countClass\">\n      <p>{{ rangeStart }}</p>\n    </div>\n    <div class=\"controls\">\n      <div class=\"form-input\">\n        <input type=\"number\" placeholder=\"count up to\" v-model=\"numberValue\" :disabled=\"disableInput\">\n      </div>\n      <div class=\"the-buttons\">\n        <button @click=\"handleCountOrReset\" :class=\"countOrReset\">{{ countOrReset }}</button>\n        <button @click=\"handleStop\" :class=\"disabledOrStop\">Stop</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onUnmounted } from \"vue\";\nimport counter from \"../composables/counter\";\n\n\nexport default {\n  name: \"Range-Compo\",\n  setup() {\n    const { rangeStart, interval, play, stop, rangeReset } = counter();\n    const numberValue = ref(null);\n    const disableInput = ref(false);\n    const countOrReset = ref(\"count\");\n    const disabledOrStop = computed(() => interval.value? \"stop\":\"disabled\");\n\n    //this is just to determine the css style rules for\n    //responsiveness to be given to the div.count-number\n    //whenever the count.value number changes \n    const countClass = computed(() => {\n      if(rangeStart.value >= 0 && rangeStart.value < 100) {\n        return \"count-number\";\n      }else if((rangeStart.value >= 100 && rangeStart.value < 1000) || (rangeStart.value < 0 && rangeStart.value >= -99)) {\n        return \"count-number hundred\";\n      } else if(rangeStart.value >= 1000 && rangeStart.value < 10000) {\n        return \"count-number thousand\";\n      } else if (rangeStart.value >= 10000) {\n        return \"count-number ten-thousand\";\n      } else {\n        return \"count-number ten-thousand\";\n      }\n    });\n    ///////////////\n\n    const handleCountOrReset = () => {\n      if(numberValue.value != null && countOrReset.value == \"count\") {\n        play(numberValue.value);\n        disableInput.value = true;\n        countOrReset.value = \"reset\";\n      }else if(countOrReset.value == \"reset\") {\n        rangeReset();\n        disableInput.value = false;\n        numberValue.value = null;\n        countOrReset.value = \"count\";\n      }\n    }\n\n    const handleStop = () => {\n      if(disabledOrStop.value == \"stop\") {\n        stop();\n      }\n    }\n\n    onUnmounted(() => {\n      rangeReset();\n    });\n\n    return {\n      numberValue,\n      disableInput, \n      disabledOrStop, \n      countOrReset, \n      rangeStart, \n      handleCountOrReset, \n      handleStop,\n      countClass\n    }\n  }\n}\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAO;;EAIXA,KAAK,EAAC;AAAU;;EACdA,KAAK,EAAC;AAAY;;;EAGlBA,KAAK,EAAC;AAAa;;uBAR5BC,mBAAA,CAaM,OAbNC,UAaM,GAZJC,mBAAA,CAEM;IAFAH,KAAK,EAAAI,eAAA,CAAEC,MAAA,CAAAC,UAAU;MACrBH,mBAAA,CAAuB,WAAAI,gBAAA,CAAjBF,MAAA,CAAAG,UAAU,iB,kBAElBL,mBAAA,CAQM,OARNM,UAQM,GAPJN,mBAAA,CAEM,OAFNO,UAEM,G,gBADJP,mBAAA,CAA8F;IAAvFQ,IAAI,EAAC,QAAQ;IAACC,WAAW,EAAC,aAAa;+DAAUP,MAAA,CAAAQ,WAAW,GAAAC,MAAA;IAAGC,QAAQ,EAAEV,MAAA,CAAAW;sDAAxBX,MAAA,CAAAQ,WAAW,E,KAErEV,mBAAA,CAGM,OAHNc,UAGM,GAFJd,mBAAA,CAAqF;IAA5Ee,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEf,MAAA,CAAAgB,kBAAA,IAAAhB,MAAA,CAAAgB,kBAAA,IAAAD,IAAA,CAAkB;IAAGpB,KAAK,EAAAI,eAAA,CAAEC,MAAA,CAAAiB,YAAY;sBAAKjB,MAAA,CAAAiB,YAAY,yBACzEnB,mBAAA,CAAiE;IAAxDe,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEf,MAAA,CAAAkB,UAAA,IAAAlB,MAAA,CAAAkB,UAAA,IAAAH,IAAA,CAAU;IAAGpB,KAAK,EAAAI,eAAA,CAAEC,MAAA,CAAAmB,cAAc;KAAE,MAAI,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}